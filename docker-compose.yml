services:

  mongodb:
    image: mongo:7.0.5
    container_name: mongodb
    ports:
      - "27020:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGODB_DATABASE}
    volumes:
      - ./user-service-api/.data:/data/db
    networks:
      - helpdesk

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 20s
      timeout: 10s
      retries: 5
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq/
    networks:
      - helpdesk

  service-discovery:
    container_name: 'service-discovery'
    build:
      context: ./service-discovery
      dockerfile: Dockerfile
    environment:
      - PORT=8761
    ports:
      - "8761:8761"
    expose:
      - 8761
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8761/actuator/health || exit 1" ]
      interval: 20s
      timeout: 10s
      retries: 5
    networks:
      - helpdesk

  config-server:
    container_name: 'config-server'
    build:
      context: ./config-server
      dockerfile: Dockerfile
    environment:
      - CONFIG_SERVER_URI=${CONFIG_REPO_URI}
      - CONFIG_SERVER_USERNAME=${CONFIG_REPO_USER}
      - CONFIG_SERVER_PASSWORD=${CONFIG_REPO_TOKEN}
      - EUREKA_URI=http://service-discovery:8761/eureka
    depends_on:
      service-discovery:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8888/actuator/health || exit 1" ]
      interval: 20s
      timeout: 10s
      retries: 5
    networks:
      - helpdesk

  api-gateway:
    container_name: 'api-gateway'
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    environment:
      - EUREKA_URI=http://service-discovery:8761/eureka
      - CONFIG_SERVER_URI=http://config-server:8888
    ports:
      - "8765:8765"
    expose:
      - 8765
    depends_on:
      service-discovery:
        condition: service_healthy
      config-server:
        condition: service_healthy
    networks:
      - helpdesk

  auth-service-api:
    container_name: 'auth-service-api'
    build:
      context: ./auth-service-api
      dockerfile: Dockerfile
    environment:
      - CONFIG_SERVER_URI=http://config-server:8888
      - PROFILE_ACTIVE=dev
      - EUREKA_URI=http://service-discovery:8761/eureka
      - SERVER_PORT=8080
    ports:
      - '8080:8080'
    expose:
      - 8080
    depends_on:
      config-server:
        condition: service_healthy
      service-discovery:
        condition: service_healthy
    networks:
      - helpdesk

  email-service:
    container_name: email-service
    build:
      context: ./email-service
      dockerfile: Dockerfile
    environment:
      - PROFILE_ACTIVE=dev
      - CONFIG_SERVER_URI=http://config-server:8888
      - EUREKA_URI=http://service-discovery:8761/eureka
      - RABBITMQ_PORT=5672
      - RABBITMQ_ADDRESSES=rabbitmq
      - RABBITMQ_USERNAME=guest
      - RABBITMQ_PASSWORD=guest
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_PROTOCOL=${MAIL_PROTOCOL}
    depends_on:
      config-server:
        condition: service_healthy
      service-discovery:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - helpdesk
networks:
  helpdesk:
    name: helpdesk
    driver: bridge
    attachable: true